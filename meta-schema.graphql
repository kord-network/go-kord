# Base types
type Party {
	id:ID!
	idType:String! #PartyId, IPI, ISNI, MBID
	displayName:String!
	firstName: String
	lastName: String
}

type Organisation {
	id:String!
	idType:String! #DPid, IPI, MBID
	displayName:String!
	formalName:String
}

# Music Types
type TerritoryAgreement {
	territoryCode:Int! #CISAC Territory standard
	condition:String! # CWR inclusion/exclusion indicator
}

type InterestedPartyAgreement {
	agreementRoleCode:String!
	interestedPartyNumber:Int!
	ipi:Int
	ipiBase:Int
	lastName:String!
	firstName:String
	prSociety:String
	prShare:Int
	mrSociety:String
	mrShare:Int
}

type MusicWork {
	iswc:String
	workTitle:String!
	territories:[TerritoryAgreement]
	interestedParty:[InterestedPartyAgreement]
	publishers:[Organisation]
	composers:[MusicComposer]
	recordings:[MusicRecording]
}

# DDEX:ERN:SoundRecording
type MusicRecording {
	isrc: String
	iswc: String
	displayTitle:String!
	displayArtist:String!
	contributors:[Party]
	label:[Organisation]
	genre:String
	work:MusicWork
	products:[MusicProduct]
}

type TerritoryProduct {
	territoryCode:String!
	releaseDate:String!
	displayTitle:String!
	displayArtist:String
	label:[Organisation]
	genre:String
}

# DDEX:ERN:Release
type MusicProduct {
	grid:String!
	isrc: String
	iswc: String
	productType:String!
	displayTitle:String!
	genre:String
	recordings:[MusicRecording]
	territoryProducts:[TerritoryProduct]!
}

type MusicPerformer {
	isni: String
	displayName:String!
	firstName: String
	lastName: String
	recordings:[MusicRecording]
	products:[MusicProduct]
}

type MusicComposer {
	ipi:Int
	ipiBase:Int
	displayName:String!
	firstName: String
	lastName: String
	works:[MusicWork]
}

type RecordLabel {
	id:String!
	idType:String #DPid, IPI, MBID
	displayName:String!
	formalName:String
	performers:[MusicPerformer]
	recordings:[MusicRecording]
	products:[MusicProduct]
}

type MusicPublisher {
	id:String!
	idType:String #DPid, IPI, MBID
	displayName:String!
	formalName:String
	composers:[MusicComposer]
	works:[MusicWork]
}
